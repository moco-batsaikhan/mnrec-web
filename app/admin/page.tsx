"use client";

import { useState, useEffect } from "react";
import AdminSidebar from "./components/AdminSidebar";

interface DashboardStats {
  overview: {
    totalUsers: number;
    activeUsers: number;
    totalNews: number;
    publishedNews: number;
    draftNews: number;
  };
  recentNews: any[];
}

export default function AdminDashboard() {
  const [stats, setStats] = useState<DashboardStats | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");

  useEffect(() => {
    fetchStats();
  }, []);

  const fetchStats = async () => {
    try {
      const response = await fetch("/api/dashboard/stats");
      if (response.ok) {
        const result = await response.json();
        setStats(result.data);
      } else {
        setError("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫ –∞—á–∞–∞–ª–∞—Ö–∞–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞");
      }
    } catch (error) {
      console.error("Stats fetch error:", error);
      setError("–°–µ—Ä–≤–µ—Ä—Ç —Ö–æ–ª–±–æ–≥–¥–æ—Ö “Ø–µ–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞");
    } finally {
      setLoading(false);
    }
  };

  if (loading) {
    return (
      <div className="p-6">
        <div className="flex items-center justify-center h-64">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600"></div>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="p-6">
        <div className="bg-red-50 border border-red-200 rounded-lg p-4">
          <p className="text-red-700">{error}</p>
        </div>
      </div>
    );
  }

  return (
    <div className="p-6">
      <div className="mb-8">
        <h1 className="text-3xl font-bold text-gray-900">–•—è–Ω–∞—Ö —Å–∞–º–±–∞—Ä</h1>
        <p className="text-gray-600">MNREC —É–¥–∏—Ä–¥–ª–∞–≥—ã–Ω —Å–∏—Å—Ç–µ–º–∏–π–Ω –Ω“Ø“Ø—Ä —Ö—É—É–¥–∞—Å</p>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <div className="bg-white rounded-lg shadow p-6">
          <div className="flex items-center">
            <div className="flex-shrink-0">
              <div className="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center">
                <span className="text-lg">üì∞</span>
              </div>
            </div>
            <div className="ml-4">
              <p className="text-sm font-medium text-gray-500">–ù–∏–π—Ç –º—ç–¥—ç—ç</p>
              <p className="text-2xl font-bold text-gray-900">{stats?.overview.totalNews || 0}</p>
            </div>
          </div>
        </div>

        <div className="bg-white rounded-lg shadow p-6">
          <div className="flex items-center">
            <div className="flex-shrink-0">
              <div className="w-8 h-8 bg-green-100 rounded-full flex items-center justify-center">
                <span className="text-lg">‚úÖ</span>
              </div>
            </div>
            <div className="ml-4">
              <p className="text-sm font-medium text-gray-500">–ù–∏–π—Ç–ª—ç–≥–¥—Å—ç–Ω</p>
              <p className="text-2xl font-bold text-gray-900">{stats?.overview.publishedNews || 0}</p>
            </div>
          </div>
        </div>

        <div className="bg-white rounded-lg shadow p-6">
          <div className="flex items-center">
            <div className="flex-shrink-0">
              <div className="w-8 h-8 bg-yellow-100 rounded-full flex items-center justify-center">
                <span className="text-lg">ÔøΩ</span>
              </div>
            </div>
            <div className="ml-4">
              <p className="text-sm font-medium text-gray-500">–ù–æ–æ—Ä–æ–≥</p>
              <p className="text-2xl font-bold text-gray-900">{stats?.overview.draftNews || 0}</p>
            </div>
          </div>
        </div>

        <div className="bg-white rounded-lg shadow p-6">
          <div className="flex items-center">
            <div className="flex-shrink-0">
              <div className="w-8 h-8 bg-purple-100 rounded-full flex items-center justify-center">
                <span className="text-lg">üë•</span>
              </div>
            </div>
            <div className="ml-4">
              <p className="text-sm font-medium text-gray-500">–•—ç—Ä—ç–≥–ª—ç–≥—á–∏–¥</p>
              <p className="text-2xl font-bold text-gray-900">{stats?.overview.totalUsers || 0}</p>
            </div>
          </div>
        </div>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <div className="bg-white rounded-lg shadow p-6">
          <h3 className="text-lg font-medium text-gray-900 mb-4">–®—É—É—Ä—Ö–∞–π —Ö–æ–ª–±–æ–æ—Å—É—É–¥</h3>
          <div className="space-y-2">
            <a
              href="/admin/news/create"
              className="block p-3 text-blue-600 hover:bg-blue-50 rounded-lg transition-colors"
            >
              ‚ûï –®–∏–Ω—ç –º—ç–¥—ç—ç –Ω—ç–º—ç—Ö
            </a>
            <a
              href="/admin/news"
              className="block p-3 text-blue-600 hover:bg-blue-50 rounded-lg transition-colors"
            >
              üì∞ –ú—ç–¥—ç—ç —É–¥–∏—Ä–¥–∞—Ö
            </a>
            <a
              href="/admin/users"
              className="block p-3 text-blue-600 hover:bg-blue-50 rounded-lg transition-colors"
            >
              üë• –•—ç—Ä—ç–≥–ª—ç–≥—á–∏–¥
            </a>
          </div>
        </div>

        <div className="bg-white rounded-lg shadow p-6">
          <h3 className="text-lg font-medium text-gray-900 mb-4">–°“Ø“Ø–ª–∏–π–Ω –º—ç–¥—ç—ç–Ω“Ø“Ø–¥</h3>
          {stats && stats.recentNews && stats.recentNews.length > 0 ? (
            <div className="space-y-3">
              {stats.recentNews.map((news: any) => (
                <div key={news.id} className="border-l-4 border-blue-500 pl-3">
                  <p className="text-sm font-medium text-gray-900">{news.title}</p>
                  <p className="text-xs text-gray-500">
                    {new Date(news.created_at).toLocaleDateString("mn-MN")}
                  </p>
                </div>
              ))}
            </div>
          ) : (
            <p className="text-gray-500 text-sm">–ú—ç–¥—ç—ç –±–∞–π—Ö–≥“Ø–π –±–∞–π–Ω–∞</p>
          )}
        </div>
      </div>
    </div>
  );
}
